add_library (NEGF_Common
write_data_NEGF.cpp
ReadInterpolateOrbitals.cpp
InitNegf.cpp
#SetEnergyWeight.cpp
#SetEnergyWeightNoneq.cpp
matrix_inverse_blocknm_Gauss.cpp
matrix_inverse_rowcol.cpp
zgesv_driver.cpp
matrix_inverse_Gauss.cpp
green_lead.cpp
host_device_wraper.cpp
matrix_inverse_driver.cpp
allocate_matrix_LCR.cpp
allocate_matrix_soft.cpp
apply_potential_drop.cpp
charge_density_matrix_p.cpp
diff_hx_interpolation.cpp
distribute_to_X_soft.cpp
distri_fermi.cpp
find_fermi.cpp
find_new_energy_point.cpp
find_new_energy_point_sharp_peak.cpp
gauleg.cpp
get_3Ddos.cpp
get_cond_frommatrix_kyz.cpp
get_ddd_update.cpp
get_dos.cpp
HijUpdate.cpp
get_inverse_block.cpp
get_inverse_block_p.cpp
get_ion_orbit_overlap_loc.cpp
get_line.cpp
get_state_to_proc.cpp
global_to_distribute3.cpp
H01_to_HCL.cpp
init_comp.cpp
init_ext.cpp
init_loc_xyz.cpp
init_pe_on.cpp
interpolation_orbit.cpp
is_vloc_state_overlap.cpp
kpoints.cpp
lead_bandstructure.cpp
lead_mat_distribute.cpp
matrix_kpoint.cpp
matrix_kpoint_center.cpp
green_kpoint_phase.cpp
matrix_kpoint_lead.cpp
min_distance_index.cpp
modify_rho.cpp
multi_GHG_munu.cpp
nlforce.cpp
plane_average_rho.cpp
pmo_init.cpp
pmo_trace.cpp
pmo_unitary_matrix.cpp
pmo_unitary_matrix_double.cpp
print_status.cpp
QuenchNegf.cpp
read_cond_input.cpp
read_LCR.cpp
read_lead_matrix.cpp
read_matrix_pp.cpp
read_orbital.cpp
read_potrho.cpp
read_potrho_LCR.cpp
read_rho_and_pot.cpp
read_trans.cpp
rho_munu.cpp
rho_nm_mat.cpp
rmg_timings.cpp
Run.cpp
scale_orbital.cpp
ScfNegf.cpp
setback_corner_matrix_H.cpp
setback_corner_matrix_S.cpp
set_energy_weight.cpp
set_energy_weight_ne.cpp
Sgreen_c.cpp
Sgreen_c_noneq_p.cpp
Sgreen_cond_p.cpp
Sgreen_c_p.cpp
Sgreen_semi_infinite_p.cpp
sigma_all_energy_point.cpp
sigma_one_energy_point.cpp
Sigma_p.cpp
spline.cpp
splint.cpp
split_matrix_center.cpp
split_matrix_lead.cpp
tools_submat.cpp
trace_AB_tri.cpp
tri_to_local.cpp
tri_to_row.cpp
tri_to_whole_complex.cpp
tri_to_whole_complex_p.cpp
whole_to_tri_complex.cpp
row_to_tri_p.cpp
whole_to_tri_real.cpp
whole_to_tri_update.cpp
write_data_lead.cpp
write_global_data.cpp
writeout_matrix_p.cpp
X_to_distribute_soft.cpp
zero_lead_image.cpp
)
include_directories("${RMG_SOURCE_DIR}/NEGF/Headers/")
include_directories("${RMG_BINARY_DIR}/NEGF/Headers/")
