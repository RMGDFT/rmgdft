add_library (Misc
OutputBandPlot.cpp
kind.f90
tetra.f90
Tetrahedron.cpp
CheckSetDefault.cpp
DistributeToGlobal.cpp    
OptimizeFdCoeff.cpp
GetPlanarAnisotropy.cpp
check_tests.cpp
MixLdaU.cpp
Precond_drho.cpp
DeviceSynchronize.cpp
Dos.cpp
Pdos.cpp
write_rho_x.cpp
write_rho_y.cpp
write_rho_z.cpp
blas_driver.cpp
Symmetry.cpp
OutputCubeFile.cpp
MyConj.cpp
#bsplines.cpp
Voronoi.cpp
WriteHeader.cpp
ProgressTag.cpp
PulayMixing.cpp
SetLaplacian.cpp
IonIonEnergy_Ewald.cpp
InitPe4image.cpp
InitPe4kpspin.cpp
VhDriver.cpp 
Pw.cpp
LocalFftForward.cpp
LocalFftInverse.cpp 
VhPfft.cpp
VhDriver.cpp
GetVtotPsi.cpp
FftInitPlans.cpp
FftFreqBin.cpp
FftFilter.cpp
FftLaplacian.cpp
FftGradient.cpp
FftInterpolation.cpp
FftRestrict.cpp
FftSmoother.cpp
fft3d.cpp
CountAtomicOrbitals.cpp
FilenameIncrement.cpp
Scalapack.cpp
Smooth.cpp
Thread_Cbindings.cpp
open_restart_file.cpp
cnpy.cpp
LinePlot.cpp
prime_factors.cpp
InitIo.cpp
Output_rho_xsf.cpp
InitHybridModel.cpp
init_kpoints.cpp
FileOpenAndCreate.cpp
CreateMmapArray.cpp
DeleteNvmeArrays.cpp
MyZgemm.cpp
RmgGemm.cpp
RmgGemmStridedBatched.cpp
RmgSymm.cpp
RmgSyrkx.cpp
GpuAlloc.cpp
GpuAllocHost.cpp
GpuStreams.cpp
RmgMallocHost.cpp
GlobalSums.cpp
GlobalSums_Cbindings.cpp
InvertMatrix.cpp
DgetrftrsDriver.cpp
#BaseThread_Cbindings.cpp
TradeImages_Cbindings.cpp
RmgSumAll_Cbindings.cpp
packfuncs_Cbindings.cpp
pack_dtos.cpp
pack_stod.cpp
BaseGrid_Cbindings.cpp
Lattice_Cbindings.cpp
transition.cpp
init_states.cpp
get_index.cpp
blaswrappers.cpp
set_bc.cpp
cgen_prolong.cpp
mg_prolong_MAX10.cpp
init_pos.cpp
rmg_error.cpp
rmg_alloc.cpp
get_opposite_occupancies.cpp
get_opposite_eigvals.cpp
remap.cpp
get_tf_rho.cpp
WriteChargeAnalysis.cpp
get_dipole.cpp
get_rho_oppo.cpp
pack.cpp
PackMatrix.cpp
RmgGpuError.cpp
GpuMem.cpp
bfgs_module.f90
basic_algebra_routines.f90
invmat.f90
GetFdFactor.cpp 
)
include_directories("${RMG_SOURCE_DIR}/Headers/")
include_directories("${RMG_BINARY_DIR}/XC/")
if(MAGMA_FOUND)
   include_directories(${MAGMA_INCLUDES})
   include_directories(${MAGMA_INCLUDES}/magma)
endif()
if(PLplot_LIBRARY)
    include_directories(${PLplot_INCLUDE_DIR})
    include_directories(${PLplot_INCLUDE_DIR}/plplot)
endif(PLplot_LIBRARY)

